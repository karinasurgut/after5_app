
indexer
{
}

searchd
{
  listen = 127.0.0.1:9306:mysql41
  log = /Users/karinasurgut/rails_projects/after5/log/development.searchd.log
  query_log = /Users/karinasurgut/rails_projects/after5/log/development.searchd.query.log
  pid_file = /Users/karinasurgut/rails_projects/after5/log/development.sphinx.pid
  workers = threads
  binlog_path = /Users/karinasurgut/rails_projects/after5/tmp/binlog/development
}

source deal_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = karinasurgut
  sql_pass = 
  sql_db = after5-dev
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "deals"."id" * 2 + 0 AS "id", "deals"."title" AS "title", "deals"."content" AS "content", venues."name" AS "venue_name", array_to_string(array_agg(DISTINCT tags."name"), ' ') AS "tags", "deals"."id" AS "sphinx_internal_id", 'Deal' AS "sphinx_internal_class", 0 AS "sphinx_deleted", "deals"."venue_id" AS "venue_id", extract(epoch from "deals"."created_at")::int AS "created_at", extract(epoch from "deals"."updated_at")::int AS "updated_at" FROM "deals" LEFT OUTER JOIN "venues" ON "venues"."id" = "deals"."venue_id" LEFT OUTER JOIN "taggings" ON "taggings"."taggable_id" = "deals"."id" AND "taggings"."taggable_type" = 'Deal' LEFT OUTER JOIN "tags" ON "tags"."id" = "taggings"."tag_id" WHERE ("deals"."id" BETWEEN $start AND $end) GROUP BY "deals"."id", "deals"."title", "deals"."content", venues."name", "deals"."id", "deals"."venue_id", "deals"."created_at", "deals"."updated_at"
  sql_query_range = SELECT COALESCE(MIN("deals"."id"), 1), COALESCE(MAX("deals"."id"), 1) FROM "deals"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = venue_id
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_string = sphinx_internal_class
  sql_field_string = title
  sql_field_string = venue_name
  sql_query_info = SELECT "deals".* FROM "deals"  WHERE ("deals"."id" = ($id - 0) / 2)
}

index deal_core
{
  type = plain
  path = /Users/karinasurgut/rails_projects/after5/db/sphinx/development/deal_core
  docinfo = extern
  charset_type = utf-8
  source = deal_core_0
}

index deal
{
  type = distributed
  local = deal_core
}
